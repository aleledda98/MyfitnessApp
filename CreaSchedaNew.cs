// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using System;
using System.Drawing;
using Foundation;
using UIKit;

namespace Myfitnessapp.iOS.CreaScheda
{
	public partial class CreaSchedaNew : UIViewController
	{
        MyScript lib = new MyScript();

        UIColor bouble = UIColor.SecondarySystemGroupedBackgroundColor;
        UIColor background = UIColor.TertiarySystemGroupedBackgroundColor;
        private float indice=1; //Altezza della View

        public CreaSchedaNew (IntPtr handle) : base (handle)
		{
		}
        private bool flagFirst = false;

        public override void ViewDidAppear(bool animated)
        {
           
            base.ViewDidAppear(animated);
            //Imposta l'altezza della view giusta
            SetNormalHeightScrollView();

            this.View.SetNeedsLayout();
            this.View.SetNeedsUpdateConstraints();
            this.View.ReloadInputViews();
            this.View.SetNeedsDisplay();


            Console.WriteLine("viewdidappear");
          
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            //Imposto i variu colori
            ViewPrincipale.BackgroundColor = background; //Imposto il background di fondo
            ScrollView.BackgroundColor = background; //Imposto il background sotto lo scrolling

            //Bolle per info
            CreateBouble(InfoStack, 25, InfoStack.Layer.Bounds.Height + 20, 2, -35);
            //Bolle per gli esercizi
            CreateBouble(StackEsercizio, 25, StackEsercizio.Layer.Bounds.Height+30, -10, -15);
            CreateBouble(StackES2, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES3, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES4, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES5, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES6, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES7, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES8, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES9, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES10, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES11, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES12, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES13, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES14, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);
            CreateBouble(StackES15, 25, StackES2.Layer.Bounds.Height + 20, -10, -35);

            //Nascondo la roba che non serve
            StackES2.Hidden = true;
            StackES3.Hidden = true;
            StackES4.Hidden = true;
            StackES5.Hidden = true;
            StackES6.Hidden = true;
            StackES7.Hidden = true;
            StackES8.Hidden = true;
            StackES9.Hidden = true;
            StackES10.Hidden = true;
            StackES11.Hidden = true;
            StackES12.Hidden = true;
            StackES13.Hidden = true;
            StackES14.Hidden = true;
            StackES15.Hidden = true;

        }


        /*Disegno una bolla di colore "background" definito in precedenza
         elemento: Oggetto UIView passato che contiene l'oggetto al quale aggiungere il layer sotto
         radious: indica il coeficente di rotondita per la bolla disegnata
         h: l'altezza della bolla variabile in base al contesto.
         h0: Il punto y di partenza*/
         private void CreateBouble(UIView elemento, int radious, nfloat h, nfloat h0, nfloat x0)
         {
            var SBouble = new UIView();
            //CGrect funziona attorno all'oggetto
            SBouble.Frame = new CGRect(x0, h0, View.Bounds.Width - 20, h);
            //Coloro i layer
            SBouble.BackgroundColor = bouble;
            //Arrotondo i layer
            SBouble.Layer.CornerRadius = radious;
            //Gli aggiungo agli oggetti di layout
            elemento.InsertSubview(SBouble, 0);
         }

        //Mostro un pop-uop di help
        partial void HelpBTN(NSObject sender)
        {
            lib.ShowPopup("Aiuto (?)", "🏋 = Campo che indica il Carico (Peso) del esercizio. \r\n⏱ = Campo che indica il recupero o pausa.", "OK", this);
        }

        //Invio la modifica al server myfitnessApp
        partial void CheckBTN(NSObject sender)
        {

        }


        private void SetNormalHeightScrollView()
        {
            ScrollView.ContentSize = new CGSize(View.Bounds.Width, ViewBackground.Bounds.Height - (StackEsercizio.Bounds.Height * 1));
        }

        private void EspandiScrollView()
        {
            double val = ScrollView.Bounds.Height + ((StackES2.Bounds.Height+40) * indice);
            //ScrollView.ContentSize = new CGSize(ScrollView.Bounds.Width, val);
            ViewDidAppear(true);
            //ViewPrincipale.Frame = new Rectangle(0, 0, 0, 0);
            indice++;
            Console.WriteLine("Ingrandisco: " + val);
        }
        private void RiduciScrollView()
        {
            double val = 60; //ScrollView.Bounds.Height - ((StackES2.Bounds.Height+40) * indice);
            //ScrollView.ContentSize = new CGSize(0, 0);//ScrollView.Bounds.Width, val);
            //ViewPrincipale.Frame = new Rectangle(0,0,0,0);
            ViewDidAppear(true);
            indice--;
            Console.WriteLine("Rimpiciolisco: "+val);
        }

        private bool flag1 = false; //Controlla e verifica che si entri negli if-else una sola volta
        private bool flag2 = false;

        /*SERIE DI METODI DI CONTROLLO DELL'INPUT
         Analizzo quando i campi NomeEsercizio vengono compilati e se succede mostro il sucessivo, tutti i metodi sono eventi 'editing changed',
         in seguito allugo la scrolling view per mostrare tutto, in caso di cancellazione l'oggetto sucessivo dovra scomparire ridemensionando la scrolling view.*/
        partial void NomeEsercizio1(NSObject sender)
        {
            
            if ((Ne1.Text.Length > 3) && (flag1==false))
            {
                EspandiScrollView();
                StackES2.Hidden = false;
                flag1 = true;
            }

            else if ((Ne1.Text.Length <= 3) && (flag1==true))
            {
                RiduciScrollView();
                StackES2.Hidden = true;
                StackES3.Hidden = true;
                flag1 = false;
            }
        }
        partial void NomeEsercizio2(NSObject sender)
        {
            
            if ((Ne2.Text.Length > 3) && (flag2 == false))
            {
                EspandiScrollView();
                StackES3.Hidden = false;
                flag2 = true;
            }

            else if ((Ne2.Text.Length <= 3) && (flag2 == true))
            {
                RiduciScrollView();
                StackES3.Hidden = true;
                flag2 = false;
            }
        }
        partial void NomeEsercizio3(NSObject sender)
        {

        }
        partial void NomeEsercizio4(NSObject sender)
        {
            
        }
        partial void NomeEsercizio5(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio6(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio7(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio8(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio9(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio10(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio11(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio12(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio13(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio14(NSObject sender)
        {
            throw new NotImplementedException();
        }
        partial void NomeEsercizio15(NSObject sender)
        {
            throw new NotImplementedException();
        }
    }
}
